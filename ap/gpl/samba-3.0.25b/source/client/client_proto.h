#ifndef _CLIENT_PROTO_H_
#define _CLIENT_PROTO_H_

/* This file is automatically generated with "make proto". DO NOT EDIT */


/* The following definitions come from client/client.c  */

void do_list(const char *mask,uint16 attribute,void (*fn)(file_info *),BOOL rec, BOOL dirs);

/* The following definitions come from client/clitar.c  */

int cmd_block(void);
int cmd_tarmode(void);
int cmd_setmode(void);
int cmd_tar(void);
int process_tar(void);
int tar_parseargs(int argc, char *argv[], const char *Optarg, int Optind);

/* The following definitions come from rpc_client/cli_netlogon.c  */

NTSTATUS rpccli_netlogon_setup_creds(struct rpc_pipe_client *cli,
				const char *server_name,
				const char *domain,
				const char *clnt_name,
				const char *machine_account,
				const unsigned char machine_pwd[16],
				uint32 sec_chan_type,
				uint32 *neg_flags_inout);
NTSTATUS rpccli_netlogon_logon_ctrl2(struct rpc_pipe_client *cli, TALLOC_CTX *mem_ctx,
                                  uint32 query_level);
WERROR rpccli_netlogon_getanydcname(struct rpc_pipe_client *cli,
				    TALLOC_CTX *mem_ctx, const char *mydcname,
				    const char *domainname, fstring newdcname);
WERROR rpccli_netlogon_dsr_getdcname(struct rpc_pipe_client *cli,
				     TALLOC_CTX *mem_ctx,
				     const char *server_name,
				     const char *domain_name,
				     struct GUID *domain_guid,
				     struct GUID *site_guid,
				     uint32_t flags,
				     struct DS_DOMAIN_CONTROLLER_INFO **info_out);
WERROR rpccli_netlogon_dsr_getdcnameex(struct rpc_pipe_client *cli,
				       TALLOC_CTX *mem_ctx,
				       const char *server_name,
				       const char *domain_name,
				       struct GUID *domain_guid,
				       const char *site_name,
				       uint32_t flags,
				       struct DS_DOMAIN_CONTROLLER_INFO **info_out);
WERROR rpccli_netlogon_dsr_getdcnameex2(struct rpc_pipe_client *cli,
					TALLOC_CTX *mem_ctx,
					const char *server_name,
					const char *client_account,
					uint32 mask,
					const char *domain_name,
					struct GUID *domain_guid,
					const char *site_name,
					uint32_t flags,
					struct DS_DOMAIN_CONTROLLER_INFO **info_out);
WERROR rpccli_netlogon_dsr_getsitename(struct rpc_pipe_client *cli,
				       TALLOC_CTX *mem_ctx,
				       const char *computer_name,
				       char **site_name);
NTSTATUS rpccli_netlogon_sam_sync(struct rpc_pipe_client *cli, TALLOC_CTX *mem_ctx,
                               uint32 database_id, uint32 next_rid, uint32 *num_deltas,
                               SAM_DELTA_HDR **hdr_deltas, 
                               SAM_DELTA_CTR **deltas);
NTSTATUS rpccli_netlogon_sam_deltas(struct rpc_pipe_client *cli, TALLOC_CTX *mem_ctx,
                                 uint32 database_id, uint64 seqnum,
                                 uint32 *num_deltas, 
                                 SAM_DELTA_HDR **hdr_deltas, 
                                 SAM_DELTA_CTR **deltas);
NTSTATUS rpccli_netlogon_sam_logon(struct rpc_pipe_client *cli,
				   TALLOC_CTX *mem_ctx,
				   uint32 logon_parameters,
				   const char *domain,
				   const char *username,
				   const char *password,
				   const char *workstation,
				   int logon_type);
NTSTATUS rpccli_netlogon_sam_network_logon(struct rpc_pipe_client *cli,
					   TALLOC_CTX *mem_ctx,
					   uint32 logon_parameters,
					   const char *server,
					   const char *username,
					   const char *domain,
					   const char *workstation, 
					   const uint8 chal[8], 
					   DATA_BLOB lm_response,
					   DATA_BLOB nt_response,
					   NET_USER_INFO_3 *info3);
NTSTATUS rpccli_net_srv_pwset(struct rpc_pipe_client *cli, TALLOC_CTX *mem_ctx, 
			   const char *machine_name, const uint8 hashed_mach_pwd[16]);

/* The following definitions come from rpc_client/cli_pipe.c  */

NTSTATUS rpc_api_pipe_req(struct rpc_pipe_client *cli,
			uint8 op_num,
			prs_struct *in_data,
			prs_struct *out_data);
struct rpc_pipe_client *cli_rpc_pipe_open_noauth(struct cli_state *cli, int pipe_idx, NTSTATUS *perr);
struct rpc_pipe_client *cli_rpc_pipe_open_ntlmssp(struct cli_state *cli,
						int pipe_idx,
						enum pipe_auth_level auth_level,
						const char *domain,
						const char *username,
						const char *password,
						NTSTATUS *perr);
struct rpc_pipe_client *cli_rpc_pipe_open_spnego_ntlmssp(struct cli_state *cli,
						int pipe_idx,
						enum pipe_auth_level auth_level,
						const char *domain,
						const char *username,
						const char *password,
						NTSTATUS *perr);
struct rpc_pipe_client *get_schannel_session_key(struct cli_state *cli,
							const char *domain,
							uint32 *pneg_flags,
							NTSTATUS *perr);
struct rpc_pipe_client *cli_rpc_pipe_open_schannel_with_key(struct cli_state *cli,
					int pipe_idx,
					enum pipe_auth_level auth_level,
					const char *domain,
					const struct dcinfo *pdc,
					NTSTATUS *perr);
struct rpc_pipe_client *cli_rpc_pipe_open_ntlmssp_auth_schannel(struct cli_state *cli,
                                                int pipe_idx,
						enum pipe_auth_level auth_level,
                                                const char *domain,
						const char *username,
						const char *password,
						NTSTATUS *perr);
struct rpc_pipe_client *cli_rpc_pipe_open_schannel(struct cli_state *cli,
                                                int pipe_idx,
						enum pipe_auth_level auth_level,
                                                const char *domain,
						NTSTATUS *perr);
struct rpc_pipe_client *cli_rpc_pipe_open_krb5(struct cli_state *cli,
						int pipe_idx,
						enum pipe_auth_level auth_level,
						const char *service_princ,
						const char *username,
						const char *password,
						NTSTATUS *perr);

/* The following definitions come from rpc_client/cli_srvsvc.c  */

WERROR rpccli_srvsvc_net_srv_get_info(struct rpc_pipe_client *cli, 
				   TALLOC_CTX *mem_ctx,
				   uint32 switch_value, SRV_INFO_CTR *ctr);
WERROR rpccli_srvsvc_net_share_enum(struct rpc_pipe_client *cli, TALLOC_CTX *mem_ctx,
				 uint32 info_level, SRV_SHARE_INFO_CTR *ctr,
				 int preferred_len, ENUM_HND *hnd);
WERROR rpccli_srvsvc_net_share_get_info(struct rpc_pipe_client *cli,
				     TALLOC_CTX *mem_ctx,
				     const char *sharename,
				     uint32 info_level,
				     SRV_SHARE_INFO *info);
WERROR rpccli_srvsvc_net_share_set_info(struct rpc_pipe_client *cli,
				     TALLOC_CTX *mem_ctx,
				     const char *sharename,
				     uint32 info_level,
				     SRV_SHARE_INFO *info);
WERROR rpccli_srvsvc_net_share_del(struct rpc_pipe_client *cli, TALLOC_CTX *mem_ctx,
				const char *sharename);
WERROR rpccli_srvsvc_net_share_add(struct rpc_pipe_client *cli, TALLOC_CTX *mem_ctx,
				const char *netname, uint32 type, 
				const char *remark, uint32 perms, 
				uint32 max_uses, uint32 num_uses, 
				const char *path, const char *passwd,
				int level, SEC_DESC *sd);
WERROR rpccli_srvsvc_net_remote_tod(struct rpc_pipe_client *cli, TALLOC_CTX *mem_ctx,
				 char *server, TIME_OF_DAY_INFO *tod);
WERROR rpccli_srvsvc_net_file_enum(struct rpc_pipe_client *cli, TALLOC_CTX *mem_ctx,
				uint32 file_level, const char *user_name,
				SRV_FILE_INFO_CTR *ctr,	int preferred_len,
				ENUM_HND *hnd);
WERROR rpccli_srvsvc_net_file_close(struct rpc_pipe_client *cli, TALLOC_CTX *mem_ctx,
				 uint32 file_id);

#endif /*  _CLIENT_PROTO_H_  */
